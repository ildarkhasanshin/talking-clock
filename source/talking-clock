#!/bin/bash

program="talking-clock"
player="aplay"

freq=0
main_dir="/usr/share"

bang="bang.wav"
# bang="cuckoo.wav" // cuckoo

print_help()
{
    cat <<-EOF
talking-clock:
-f [n]
    n: 5, 15, 30 ( min frequency )
    If no frequency specified clock will play only at full hour.
-s
    stops clock
EOF

    exit 1
}

stop_clock()
{
    pid=$(pidof -x -o $$ "${0##*/}")

    if [ -n "$pid" ]
    then
        kill "$pid"
        echo "stopping ${BASH_ARGV[0]}"
    fi
}

clock()
{
    while :
    do
        minute=$(date +%M)
        hour=$(date +%l | tr -d ' ')

        if [[ $minute -eq 00 ]];then
            $player -q "$main_dir/$program/$bang"
            $player -q "$main_dir/$program/$hour.wav"
            $player -q "$main_dir/$program/0.wav"
            $player -q "$main_dir/$program/0.wav"
        elif [[ $minute -eq 10 && $freq -eq 5 ]]; then
            $player -q "$main_dir/$program/$hour.wav"
            $player -q "$main_dir/$program/10.wav"
        elif [[ $minute -eq 15  && ( $freq -eq 15 || $freq -eq 5 ) ]]; then
            $player -q "$main_dir/$program/quarter.wav"
            $player -q "$main_dir/$program/past.wav"
            $player -q "$main_dir/$program/$hour.wav"
        elif [[ $minute -eq 20 && $freq -eq 5 ]]; then
            $player -q "$main_dir/$program/$hour.wav"
            $player -q "$main_dir/$program/20.wav"
        elif [[ $minute -eq 25 && $freq -eq 5 ]]; then
            $player -q "$main_dir/$program/$hour.wav"
            $player -q "$main_dir/$program/20.wav"
            $player -q "$main_dir/$program/5.wav"
        elif [[ $minute -eq 30 && ( $freq -eq 30 || $freq -eq 15 || $freq -eq 5 ) ]]; then
            $player -q "$main_dir/$program/$bang"
            $player -q "$main_dir/$program/$hour.wav"
            $player -q "$main_dir/$program/30.wav"
        elif [[ $minute -eq 35 && $freq -eq 5 ]]; then
            $player -q "$main_dir/$program/$hour.wav"
            $player -q "$main_dir/$program/30.wav"
            $player -q "$main_dir/$program/5.wav"
        elif [[ $minute -eq 40 && $freq -eq 5 ]]; then
            $player -q "$main_dir/$program/$hour.wav"
            $player -q "$main_dir/$program/40.wav"
        elif [[ $minute -eq 45  &&  ( $freq -eq 15  ||  $freq -eq 5 ) ]]; then
            $player -q "$main_dir/$program/quarter.wav"
            $player -q "$main_dir/$program/to.wav"
            if [[ $hour -eq 12 ]];then
                $player -q "$main_dir/$program/1.wav"
            else
                $player -q "$main_dir/$program/$((hour + 1)).wav"
            fi
        elif [[ $minute -eq 50  &&  $freq -eq 5 ]]; then
            $player -q "$main_dir/$program/$hour.wav"
            $player -q "$main_dir/$program/50.wav"
        elif [[ $minute -eq 55 &&  $freq -eq 5 ]]; then
            $player -q "$main_dir/$program/$hour.wav"
            $player -q "$main_dir/$program/50.wav"
            $player -q "$main_dir/$program/5.wav"
        fi
        sleep 60
    done | logger
}

if [ "$(which $player &> /dev/null)" ];then
    echo "$player is necessary to play clock sound"
    exit 1
fi

[[ "$1" == "-h" ]] && print_help

[[ "$1" == "-s" ]] && stop_clock

if [ "$1" == "-f" ];
then
    ( ($2 != 5) && ($2 != 15) && ($2 != 30) ) && print_help
    freq=$2
else
    [[ $1 != "" ]] && print_help
fi

stop_clock
echo "starting $program"

clock &
